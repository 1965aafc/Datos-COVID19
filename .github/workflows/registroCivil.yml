name: Actualiza_productos_de_Registro_Civil

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
    push
    #schedule:
    #  - cron:  '00 * * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Actualiza_productos_del_Registro_Civil:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: set environment variables
      uses: allenevans/set-env@v1.0.0
      with:
        SLACK_MESSAGE: "Storing changes"
        overwrite: false

      # Sets up python
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
          python-version: 3.7

    # Runs a set of commands using the runners shell
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: querying API to update our products
      run: |
        cd src
        python registroCivil.py
        for i in *.tmp;do
          echo "Processing ${i}"
          echo "SLACK_MESSAGE=${SLACK_MESSAGE}_$i"
          echo "SLACK_MESSAGE=${SLACK_MESSAGE}_$(cat $i)"
        done
        echo $SLACK_MESSAGE
        echo 'SEBAWTF'
        export SLACK_MESSAGE="${SLACK_MESSAGE}"
        echo $SLACK_MESSAGE
        uses: rtCamp/action-slack-notify@master
        env:
        SLACK_CHANNEL: github-notifications
        #SLACK_MESSAGE: ${SLACK_MESSAGE}
        SLACK_TITLE: ‘update_en_COVID19’
        SLACK_USERNAME: ‘gitbot’
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}


    - name: update_API
      run: |
        curl -u "${{ secrets.DO_INT_USER }}:${{ secrets.DO_INT_PASS }}" \
        -H 'Accept: application/vnd.github.everest-preview+json'  "https://api.github.com/repos/Data-Observatory/covid19-API/dispatches" \
        -d '{"event_type": "update_please_from_Registro_Civil"}'

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_CHANNEL: github-notifications
        #SLACK_MESSAGE: ${SLACK_MESSAGE}
        SLACK_TITLE: ‘update_en_COVID19’
        SLACK_USERNAME: ‘gitbot’
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
